// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartographer/transform/proto/timestamped_transform.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "csmlio/transform/proto/timestamped_transform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace csmlio {
namespace transform {
namespace proto {
class TimestampedTransformDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TimestampedTransform>
     _instance;
} _TimestampedTransform_default_instance_;

namespace protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampedTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampedTransform, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimestampedTransform, transform_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(TimestampedTransform)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TimestampedTransform_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cartographer/transform/proto/timestamped_transform.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::csmlio::transform::proto::protobuf_cartographer_2ftransform_2fproto_2ftransform_2eproto::InitDefaults();
  _TimestampedTransform_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TimestampedTransform_default_instance_);_TimestampedTransform_default_instance_._instance.get_mutable()->transform_ = const_cast< ::csmlio::transform::proto::Rigid3d*>(
      ::csmlio::transform::proto::Rigid3d::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n8cartographer/transform/proto/timestamp"
      "ed_transform.proto\022\034cartographer.transfo"
      "rm.proto\032,cartographer/transform/proto/t"
      "ransform.proto\"^\n\024TimestampedTransform\022\014"
      "\n\004time\030\001 \001(\003\0228\n\ttransform\030\002 \001(\0132%.cartog"
      "rapher.transform.proto.Rigid3db\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 238);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cartographer/transform/proto/timestamped_transform.proto", &protobuf_RegisterTypes);
  ::csmlio::transform::proto::protobuf_cartographer_2ftransform_2fproto_2ftransform_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimestampedTransform::kTimeFieldNumber;
const int TimestampedTransform::kTransformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimestampedTransform::TimestampedTransform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cartographer.transform.proto.TimestampedTransform)
}
TimestampedTransform::TimestampedTransform(const TimestampedTransform& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transform()) {
    transform_ = new ::csmlio::transform::proto::Rigid3d(*from.transform_);
  } else {
    transform_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:cartographer.transform.proto.TimestampedTransform)
}

void TimestampedTransform::SharedCtor() {
  ::memset(&transform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&transform_)) + sizeof(time_));
  _cached_size_ = 0;
}

TimestampedTransform::~TimestampedTransform() {
  // @@protoc_insertion_point(destructor:cartographer.transform.proto.TimestampedTransform)
  SharedDtor();
}

void TimestampedTransform::SharedDtor() {
  if (this != internal_default_instance()) delete transform_;
}

void TimestampedTransform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimestampedTransform::descriptor() {
  protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimestampedTransform& TimestampedTransform::default_instance() {
  protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::InitDefaults();
  return *internal_default_instance();
}

TimestampedTransform* TimestampedTransform::New(::google::protobuf::Arena* arena) const {
  TimestampedTransform* n = new TimestampedTransform;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimestampedTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:cartographer.transform.proto.TimestampedTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && transform_ != NULL) {
    delete transform_;
  }
  transform_ = NULL;
  time_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool TimestampedTransform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cartographer.transform.proto.TimestampedTransform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .cartographer.transform.proto.Rigid3d transform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cartographer.transform.proto.TimestampedTransform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cartographer.transform.proto.TimestampedTransform)
  return false;
#undef DO_
}

void TimestampedTransform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cartographer.transform.proto.TimestampedTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // .cartographer.transform.proto.Rigid3d transform = 2;
  if (this->has_transform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->transform_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cartographer.transform.proto.TimestampedTransform)
}

::google::protobuf::uint8* TimestampedTransform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cartographer.transform.proto.TimestampedTransform)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // .cartographer.transform.proto.Rigid3d transform = 2;
  if (this->has_transform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->transform_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cartographer.transform.proto.TimestampedTransform)
  return target;
}

size_t TimestampedTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cartographer.transform.proto.TimestampedTransform)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .cartographer.transform.proto.Rigid3d transform = 2;
  if (this->has_transform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transform_);
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimestampedTransform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cartographer.transform.proto.TimestampedTransform)
  GOOGLE_DCHECK_NE(&from, this);
  const TimestampedTransform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimestampedTransform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cartographer.transform.proto.TimestampedTransform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cartographer.transform.proto.TimestampedTransform)
    MergeFrom(*source);
  }
}

void TimestampedTransform::MergeFrom(const TimestampedTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cartographer.transform.proto.TimestampedTransform)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transform()) {
    mutable_transform()->::csmlio::transform::proto::Rigid3d::MergeFrom(from.transform());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void TimestampedTransform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cartographer.transform.proto.TimestampedTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimestampedTransform::CopyFrom(const TimestampedTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cartographer.transform.proto.TimestampedTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimestampedTransform::IsInitialized() const {
  return true;
}

void TimestampedTransform::Swap(TimestampedTransform* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimestampedTransform::InternalSwap(TimestampedTransform* other) {
  using std::swap;
  swap(transform_, other->transform_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimestampedTransform::GetMetadata() const {
  protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimestampedTransform

// int64 time = 1;
void TimestampedTransform::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TimestampedTransform::time() const {
  // @@protoc_insertion_point(field_get:cartographer.transform.proto.TimestampedTransform.time)
  return time_;
}
void TimestampedTransform::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:cartographer.transform.proto.TimestampedTransform.time)
}

// .cartographer.transform.proto.Rigid3d transform = 2;
bool TimestampedTransform::has_transform() const {
  return this != internal_default_instance() && transform_ != NULL;
}
void TimestampedTransform::clear_transform() {
  if (GetArenaNoVirtual() == NULL && transform_ != NULL) delete transform_;
  transform_ = NULL;
}
const ::csmlio::transform::proto::Rigid3d& TimestampedTransform::transform() const {
  const ::csmlio::transform::proto::Rigid3d* p = transform_;
  // @@protoc_insertion_point(field_get:cartographer.transform.proto.TimestampedTransform.transform)
  return p != NULL ? *p : *reinterpret_cast<const ::csmlio::transform::proto::Rigid3d*>(
      &::csmlio::transform::proto::_Rigid3d_default_instance_);
}
::csmlio::transform::proto::Rigid3d* TimestampedTransform::mutable_transform() {
  
  if (transform_ == NULL) {
    transform_ = new ::csmlio::transform::proto::Rigid3d;
  }
  // @@protoc_insertion_point(field_mutable:cartographer.transform.proto.TimestampedTransform.transform)
  return transform_;
}
::csmlio::transform::proto::Rigid3d* TimestampedTransform::release_transform() {
  // @@protoc_insertion_point(field_release:cartographer.transform.proto.TimestampedTransform.transform)
  
  ::csmlio::transform::proto::Rigid3d* temp = transform_;
  transform_ = NULL;
  return temp;
}
void TimestampedTransform::set_allocated_transform(::csmlio::transform::proto::Rigid3d* transform) {
  delete transform_;
  transform_ = transform;
  if (transform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cartographer.transform.proto.TimestampedTransform.transform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace transform
}  // namespace csmlio

// @@protoc_insertion_point(global_scope)
