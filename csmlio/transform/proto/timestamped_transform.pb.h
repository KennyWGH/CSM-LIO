// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cartographer/transform/proto/timestamped_transform.proto

#ifndef PROTOBUF_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto__INCLUDED
#define PROTOBUF_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "csmlio/transform/proto/transform.pb.h"
// @@protoc_insertion_point(includes)
namespace csmlio {
namespace transform {
namespace proto {
class TimestampedTransform;
class TimestampedTransformDefaultTypeInternal;
extern TimestampedTransformDefaultTypeInternal _TimestampedTransform_default_instance_;
}  // namespace proto
}  // namespace transform
}  // namespace csmlio

namespace csmlio {
namespace transform {
namespace proto {

namespace protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto

// ===================================================================

class TimestampedTransform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cartographer.transform.proto.TimestampedTransform) */ {
 public:
  TimestampedTransform();
  virtual ~TimestampedTransform();

  TimestampedTransform(const TimestampedTransform& from);

  inline TimestampedTransform& operator=(const TimestampedTransform& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimestampedTransform(TimestampedTransform&& from) noexcept
    : TimestampedTransform() {
    *this = ::std::move(from);
  }

  inline TimestampedTransform& operator=(TimestampedTransform&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimestampedTransform& default_instance();

  static inline const TimestampedTransform* internal_default_instance() {
    return reinterpret_cast<const TimestampedTransform*>(
               &_TimestampedTransform_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TimestampedTransform* other);
  friend void swap(TimestampedTransform& a, TimestampedTransform& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimestampedTransform* New() const PROTOBUF_FINAL { return New(NULL); }

  TimestampedTransform* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimestampedTransform& from);
  void MergeFrom(const TimestampedTransform& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimestampedTransform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cartographer.transform.proto.Rigid3d transform = 2;
  bool has_transform() const;
  void clear_transform();
  static const int kTransformFieldNumber = 2;
  const ::csmlio::transform::proto::Rigid3d& transform() const;
  ::csmlio::transform::proto::Rigid3d* mutable_transform();
  ::csmlio::transform::proto::Rigid3d* release_transform();
  void set_allocated_transform(::csmlio::transform::proto::Rigid3d* transform);

  // int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:cartographer.transform.proto.TimestampedTransform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::csmlio::transform::proto::Rigid3d* transform_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend struct protobuf_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TimestampedTransform

// int64 time = 1;
inline void TimestampedTransform::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TimestampedTransform::time() const {
  // @@protoc_insertion_point(field_get:cartographer.transform.proto.TimestampedTransform.time)
  return time_;
}
inline void TimestampedTransform::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:cartographer.transform.proto.TimestampedTransform.time)
}

// .cartographer.transform.proto.Rigid3d transform = 2;
inline bool TimestampedTransform::has_transform() const {
  return this != internal_default_instance() && transform_ != NULL;
}
inline void TimestampedTransform::clear_transform() {
  if (GetArenaNoVirtual() == NULL && transform_ != NULL) delete transform_;
  transform_ = NULL;
}
inline const ::csmlio::transform::proto::Rigid3d& TimestampedTransform::transform() const {
  const ::csmlio::transform::proto::Rigid3d* p = transform_;
  // @@protoc_insertion_point(field_get:cartographer.transform.proto.TimestampedTransform.transform)
  return p != NULL ? *p : *reinterpret_cast<const ::csmlio::transform::proto::Rigid3d*>(
      &::csmlio::transform::proto::_Rigid3d_default_instance_);
}
inline ::csmlio::transform::proto::Rigid3d* TimestampedTransform::mutable_transform() {
  
  if (transform_ == NULL) {
    transform_ = new ::csmlio::transform::proto::Rigid3d;
  }
  // @@protoc_insertion_point(field_mutable:cartographer.transform.proto.TimestampedTransform.transform)
  return transform_;
}
inline ::csmlio::transform::proto::Rigid3d* TimestampedTransform::release_transform() {
  // @@protoc_insertion_point(field_release:cartographer.transform.proto.TimestampedTransform.transform)
  
  ::csmlio::transform::proto::Rigid3d* temp = transform_;
  transform_ = NULL;
  return temp;
}
inline void TimestampedTransform::set_allocated_transform(::csmlio::transform::proto::Rigid3d* transform) {
  delete transform_;
  transform_ = transform;
  if (transform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:cartographer.transform.proto.TimestampedTransform.transform)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace transform
}  // namespace csmlio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cartographer_2ftransform_2fproto_2ftimestamped_5ftransform_2eproto__INCLUDED
